#!/bin/bash
BASE_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
ENV=$1

if [ -z ${ENV} ]; then
	echo "Usage: `basename $0` <environment>"
	exit 1
fi

function deploy {
	local host=$1
	local user=$2
	local appDir=$3
	local envFile=$4


	includes=(
    	"api/***"
    	"config/"
    	"config/app.js"
    	"config/index.js"
    	"index.js"
    	"package.json"
    )

    excludes=(
    )

    params=()
    for E in "${excludes[@]}"; do
        params+=(" --exclude=\"${E}\"")
    done

    for E in "${includes[@]}"; do
        params+=(" --include=\"${E}\"")
    done
    params+=(" --exclude=\"*\"")

    cmd="rsync -av ./ ${user}@${host}:${appDir} ${params[@]} --delete --progress"
    echo ${cmd}
    eval ${cmd}

	ssh ${user}@${host} << HERE

		ln -fs ${envFile} ${appDir}/.env
		cd ${appDir}
		npm install

HERE
}

envFile=${BASE_DIR}/.deploy.${ENV}
if [ -f ${envFile} ]; then
	source ${envFile}
fi

if [ -z ${DEPLOY_HOST} ]; then echo "DEPLOY_HOST is not set"; exit 1; fi
if [ -z ${DEPLOY_USER} ]; then echo "DEPLOY_USER is not set"; exit 1; fi
if [ -z ${DEPLOY_DIRECTORY} ]; then echo "DEPLOY_DIRECTORY is not set"; exit 1; fi
if [ -z ${DEPLOY_ENV_FILE} ]; then echo "DEPLOY_ENV_FILE is not set"; exit 1; fi

deploy ${DEPLOY_HOST} ${DEPLOY_USER} ${DEPLOY_DIRECTORY} ${DEPLOY_ENV_FILE}
